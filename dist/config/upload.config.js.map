{"version":3,"sources":["../../src/config/upload.config.js"],"names":["multer","require","path","slugify","module","exports","allowedMimes","dest","resolve","__dirname","storage","diskStorage","destination","req","file","cb","filename","Date","getTime","originalname","lower","language","limits","fileSize","process","env","UPLOAD_LIMIT","fileFilter","includes","mimetype","Error"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAACC,YAAD;AAAA,SAAmB;AAChCC,IAAAA,IAAI,EAAEL,IAAI,CAACM,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,SAA9B,CAD0B;AAEhCC,IAAAA,OAAO,EAAEV,MAAM,CAACW,WAAP,CAAmB;AACxBC,MAAAA,WAAW,EAAE,qBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC5BA,QAAAA,EAAE,CAAC,IAAD,EAAOb,IAAI,CAACM,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,SAA9B,CAAP,CAAF;AACH,OAHuB;AAIxBO,MAAAA,QAAQ,EAAE,kBAACH,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AACzBA,QAAAA,EAAE,CAAC,IAAD,YAAU,IAAIE,IAAJ,GAAWC,OAAX,EAAV,cACMf,OAAO,CAACW,IAAI,CAACK,YAAN,EAAoB;AACvBC,UAAAA,KAAK,EAAE,IADgB;AAEvBC,UAAAA,QAAQ,EAAE;AAFa,SAApB,CADb,EAAF;AAOH;AAZuB,KAAnB,CAFuB;AAgBhCC,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,YAAZ,GAA2B,IAA3B,GAAkC;AADxC,KAhBwB;AAmBhCC,IAAAA,UAAU,EAAE,oBAACd,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC3B,UAAIT,YAAY,CAACsB,QAAb,CAAsBd,IAAI,CAACe,QAA3B,CAAJ,EAA0C;AACtCd,QAAAA,EAAE,CAAC,IAAD,EAAO,IAAP,CAAF;AACH,OAFD,MAEO;AACHA,QAAAA,EAAE,CAAC,IAAIe,KAAJ,CAAU,mBAAV,CAAD,CAAF;AACH;AACJ;AAzB+B,GAAnB;AAAA,CAAjB","sourcesContent":["const multer = require('multer');\nconst path = require('path');\nconst slugify = require('slugify');\n\nmodule.exports = (allowedMimes) => ({\n    dest: path.resolve(__dirname, '..', 'uploads'),\n    storage: multer.diskStorage({\n        destination: (req, file, cb) => {\n            cb(null, path.resolve(__dirname, '..', 'uploads'))\n        },\n        filename: (req, file, cb) => {\n            cb(null, `${new Date().getTime()}-${ \n                    slugify(file.originalname, {\n                        lower: true,\n                        language: 'pt'\n                    })\n                }`\n            );\n        }\n    }),\n    limits: {\n        fileSize: process.env.UPLOAD_LIMIT * 1024 * 1024\n    },\n    fileFilter: (req, file, cb) => {\n        if (allowedMimes.includes(file.mimetype)) {\n            cb(null, true);\n        } else {\n            cb(new Error('Invalid filetype.'));\n        }\n    }\n});"],"file":"upload.config.js"}