{"version":3,"sources":["../../src/controllers2/sectionController.js"],"names":["httpStatus","require","SectionController","database","req","res","sections","destroy","where","params","flag","status","OK","json","success","get","findAll","order","section","save","create","body","newInstance","CREATED","edit","update","post","module","exports"],"mappings":";;;;;;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,QAAQ;AAAA,SAAK;AACnC;AAAA,6EAAQ,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,gBAAAA,QADJ,GACiBH,QADjB,CACIG,QADJ;AAAA;AAAA,uBAEeA,QAAQ,CAACC,OAAT,CAAiB;AAAEC,kBAAAA,KAAK,EAAEJ,GAAG,CAACK;AAAb,iBAAjB,CAFf;;AAAA;AAEEC,gBAAAA,IAFF;AAAA,iDAGGL,GAAG,CAACM,MAAJ,CAAWX,UAAU,CAACY,EAAtB,EAA0BC,IAA1B,CAA+B;AAAEC,kBAAAA,OAAO,EAAEJ;AAAX,iBAA/B,CAHH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADmC;AAMnCK,IAAAA,GAAG;AAAA,yEAAE,kBAAOX,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACOC,gBAAAA,QADP,GACoBH,QADpB,CACOG,QADP;AAAA;AAAA,uBAGqBA,QAAQ,CAACU,OAAT,CAAiB;AACnCR,kBAAAA,KAAK,EAAEJ,GAAG,CAACK,MADwB;AAEnCQ,kBAAAA,KAAK,EAAE,CAAC,CAAC,YAAD,EAAe,MAAf,CAAD;AAF4B,iBAAjB,CAHrB;;AAAA;AAGKC,gBAAAA,OAHL;AAAA,kDAOMb,GAAG,CAACM,MAAJ,CAAWX,UAAU,CAACY,EAAtB,EAA0BC,IAA1B,CAA+BK,OAA/B,CAPN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OANgC;AAenCC,IAAAA,IAAI;AAAA,0EAAE,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,gBAAAA,QADN,GACmBH,QADnB,CACMG,QADN;AAAA;AAAA,uBAGwBA,QAAQ,CAACc,MAAT,CAAgBhB,GAAG,CAACiB,IAApB,CAHxB;;AAAA;AAGIC,gBAAAA,WAHJ;AAAA,kDAKKjB,GAAG,CAACM,MAAJ,CAAWX,UAAU,CAACuB,OAAtB,EAA+BV,IAA/B,CAAoCS,WAApC,CALL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAf+B;AAsBnCE,IAAAA,IAAI;AAAA,0EAAE,kBAAOpB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,gBAAAA,QADN,GACmBH,QADnB,CACMG,QADN;AAAA;AAAA,uBAEiBA,QAAQ,CAACmB,MAAT,CAAgBrB,GAAG,CAACiB,IAApB,EAA0B;AAAEb,kBAAAA,KAAK,EAAEJ,GAAG,CAACK;AAAb,iBAA1B,CAFjB;;AAAA;AAEIiB,gBAAAA,IAFJ;AAAA,kDAGKrB,GAAG,CAACM,MAAJ,CAAWX,UAAU,CAACuB,OAAtB,EAA+BV,IAA/B,CAAoCa,IAApC,CAHL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAtB+B,GAAL;AAAA,CAAlC;;AA8BAC,MAAM,CAACC,OAAP,GAAiB1B,iBAAjB","sourcesContent":["const httpStatus = require('http-status');\n\nconst SectionController = database => ({\n    delete: async (req, res) => {\n        const { sections } = database;\n        const flag = await sections.destroy({ where: req.params });\n        return res.status(httpStatus.OK).json({ success: flag });\n    },\n    get: async (req, res) => {\n        const { sections } = database;\n\n        const section = await sections.findAll({\n            where: req.params,\n            order: [['created_at', 'DESC']]\n        });\n        return res.status(httpStatus.OK).json(section);\n    },\n    save: async (req, res) => {\n        const { sections } = database;\n\n        const newInstance = await sections.create(req.body); \n\n        return res.status(httpStatus.CREATED).json(newInstance);\n    },\n    edit: async (req, res) => {\n        const { sections } = database;\n        const post = await sections.update(req.body, { where: req.params });\n        return res.status(httpStatus.CREATED).json(post);\n    }\n});\n\n\nmodule.exports = SectionController;"],"file":"sectionController.js"}