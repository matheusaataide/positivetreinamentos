{"version":3,"sources":["../../src/controllers2/testemonialController.js"],"names":["httpStatus","require","TestemonialController","database","req","res","testemonials","destroy","where","params","flag","status","OK","json","success","get","findByPk","id","testemonial","getAll","findAll","save","create","body","newInstance","CREATED","edit","update","post","module","exports"],"mappings":"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","sourcesContent":["const httpStatus = require('http-status');\n\nconst TestemonialController = database => ({\n    delete: async (req, res) => {\n        const { testemonials } = database;\n        const flag = await testemonials.destroy({ where: req.params });\n        return res.status(httpStatus.OK).json({ success: flag });\n    },\n    get: async (req, res) => {\n        const { testemonials } = database;\n        const testemonial = await testemonials.findByPk(req.params.id);\n        return res.status(httpStatus.OK).json(testemonial);\n    },\n    getAll: async (req, res) => {\n            const { testemonials } = database;\n            return res.status(httpStatus.OK).json(await testemonials.findAll());\n        },\n    save: async (req, res) => {\n        const { testemonials } = database;\n\n        const newInstance = await testemonials.create(req.body); \n\n        return res.status(httpStatus.CREATED).json(newInstance);\n    },\n    edit: async (req, res) => {\n        const { testemonials } = database;\n        const post = await testemonials.update(req.body, { where: req.params });\n        return res.status(httpStatus.CREATED).json(post);\n    }\n});\n\n\nmodule.exports = TestemonialController;"],"file":"testemonialController.js"}