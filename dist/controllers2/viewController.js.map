{"version":3,"sources":["../../src/controllers2/viewController.js"],"names":["httpStatus","require","ViewController","database","getByPage","req","res","views","count","params","total","status","json","getAll","OK","save","create","body","newView","where","module","exports"],"mappings":";;;;;;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ;AAAA,SAAK;AAChCC,IAAAA,SAAS;AAAA,+EAAE,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gBAAAA,KADD,GACWJ,QADX,CACCI,KADD;AAAA;AAAA,uBAGaA,KAAK,CAACC,KAAN,CAAYH,GAAG,CAACI,MAAhB,CAHb;;AAAA;AAGDC,gBAAAA,KAHC;AAAA,iDAKAJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,kBAAAA,KAAK,EAALA;AAAF,iBAArB,CALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADuB;AAQhCG,IAAAA,MAAM;AAAA,4EAAE,kBAAOR,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,KADR,GACkBJ,QADlB,CACQI,KADR;AAAA,+BAEOD,GAAG,CAACK,MAAJ,CAAWX,UAAU,CAACc,EAAtB,CAFP;AAAA;AAAA,uBAE4CP,KAAK,CAACC,KAAN,EAF5C;;AAAA;AAAA;AAAA,+DAEiCI,IAFjC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAR0B;AAYhCG,IAAAA,IAAI;AAAA,0EAAE,kBAAOV,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,gBAAAA,KADN,GACgBJ,QADhB,CACMI,KADN;AAAA;AAAA,uBAGoBA,KAAK,CAACS,MAAN,CAAaX,GAAG,CAACY,IAAjB,CAHpB;;AAAA;AAGIC,gBAAAA,OAHJ;AAAA;AAAA,uBAIkBX,KAAK,CAACC,KAAN,CAAY;AAAEW,kBAAAA,KAAK,EAAEd,GAAG,CAACI;AAAb,iBAAZ,CAJlB;;AAAA;AAIIC,gBAAAA,KAJJ;AAAA,kDAKKJ,GAAG,CAACK,MAAJ,CAAWX,UAAU,CAACc,EAAtB,EAA0BF,IAA1B,CAA+B;AAAEF,kBAAAA,KAAK,EAALA;AAAF,iBAA/B,CALL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAZ4B,GAAL;AAAA,CAA/B;;AAsBAU,MAAM,CAACC,OAAP,GAAiBnB,cAAjB","sourcesContent":["const httpStatus = require('http-status');\n\nconst ViewController = database => ({\n    getByPage: async (req, res) => {\n        const { views } = database;\n\n        const total = await views.count(req.params);\n        \n        return res.status(200).json({ total });\n    },\n    getAll: async (req, res) => {\n            const { views } = database;\n            return res.status(httpStatus.OK).json(await views.count());\n        },\n    save: async (req, res) => {\n        const { views } = database;\n\n        const newView = await views.create(req.body);\n        const total = await views.count({ where: req.params });\n        return res.status(httpStatus.OK).json({ total });\n    }\n});\n\n\nmodule.exports = ViewController;"],"file":"viewController.js"}